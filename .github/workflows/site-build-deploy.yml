name: Build PDFs & Deploy Pages (single repo, candidatura only)

on:
  push:
    branches: [ "main" ]
    paths:
      - "documenti/candidatura/**"
      - "scripts/**"
      - "index.html"
      - "css/**"
      - "img/**"
      - "requirements.txt"
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ⬇️ Installa Tectonic scaricando il binario dal release ufficiale
      - name: Install Tectonic (download release binary)
        shell: bash
        run: |
          set -eux
          ARCH="$(uname -m)"
          case "$ARCH" in
            x86_64)  TARBALL="tectonic-x86_64-unknown-linux-gnu.tar.gz" ;;
            aarch64) TARBALL="tectonic-aarch64-unknown-linux-gnu.tar.gz" ;;
            *) echo "Arch non supportata: $ARCH" && exit 1 ;;
          esac
          curl -L "https://github.com/tectonic-typesetting/tectonic/releases/latest/download/${TARBALL}" -o tt.tgz
          tar -xzf tt.tgz
          # sposta il binario in PATH (la cartella estratta inizia con 'tectonic-')
          sudo mv tectonic-*/tectonic /usr/local/bin/tectonic
          tectonic --version

      - name: Compile all .tex under documenti/candidatura
        shell: bash
        run: |
          set -euo pipefail
          ROOT="documenti/candidatura"
          if ! find "$ROOT" -type f -name '*.tex' | grep -q .; then
            echo "NO_TEX=true" >> "$GITHUB_ENV"
            echo "Nessun .tex trovato sotto $ROOT."
          else
            while IFS= read -r -d '' TEX; do
              DIR="$(dirname "$TEX")"
              BASE="$(basename "$TEX" .tex)"
              echo "::group::Compilo $TEX"
              ( cd "$DIR" && tectonic "$BASE.tex" )
              echo "::endgroup::"
            done < <(find "$ROOT" -type f -name '*.tex' -print0)
          fi

      - name: Python deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Update index.html (Candidatura)
        run: |
          python scripts/update_index.py \
            --root documenti \
            --index index.html \
            --base-url "/documenti" \
            --manifest data/manifest.json

      - name: Commit auto-changes (PDFs + index + manifest)
        run: |
          git config user.name  "github-actions"
          git config user.email "actions@github.com"
          git add documenti/ index.html data/manifest.json || true
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore(site): build PDFs and update index (candidatura)"
            git push
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
